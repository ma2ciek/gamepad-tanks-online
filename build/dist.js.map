{"version":3,"sources":["game.ts","BulletManager.ts","PlayerManager.ts","Emitter.ts","Player.ts","Bullet.ts","utils.ts","Tank.ts","Vector.ts","tanks/E-100.ts"],"names":[],"mappings":"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","file":"","sourcesContent":["import BulletManager from './BulletManager';\nimport PlayerManager from './PlayerManager';\n// import CollisionManager from './CollisionManager';\n\nconst canvas = document.getElementById('canvas') as HTMLCanvasElement;\nconst ctx = canvas.getContext('2d') as CanvasRenderingContext2D;\n\nconst playerManager = new PlayerManager();\nconst bulletManager = new BulletManager();\n// const collisionManager = new CollisionManager();\n\nplayerManager.bulletEmitter.subscribe(bullet => bulletManager.add(bullet));\n\nfunction loop() {\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    playerManager.updatePads();\n\n    for (const player of playerManager.getPlayers()) {\n        player.move();\n        player.draw(ctx);\n    }\n\n    for (const bullet of bulletManager.getBullets()) {\n        bullet.move();\n        bullet.draw(ctx);\n    }\n\n    // for (const bullet of bulletManager.getBullets()) {\n    //     for (const player of playerManager.getPlayers()) {\n    //         const collision = collisionManager.checkCollisions(bullet, player);\n\n    //         if (collision) {\n    //             player.handleHit(bullet);\n    //         }\n    //     }\n    // }\n\n    requestAnimationFrame(loop);\n}\n\nfunction updateScreen() {\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight;\n}\n\nwindow.onresize = updateScreen;\n\nupdateScreen();\nloop();\n","import Bullet from './Bullet';\n\nexport default class BulletManager {\n    private bullets: Bullet[] = [];\n\n    public getBullets() {\n        return this.bullets;\n    }\n\n    public add(bullet: Bullet) {\n        this.bullets.push(bullet);\n    }\n}\n","import Bullet from './Bullet';\nimport Emitter from './Emitter';\nimport Player from './Player';\n\nexport default class PlayerManager {\n    public bulletEmitter = new Emitter<Bullet>();\n\n    private players: Player[] = [];\n\n    public updatePads() {\n        const pads = navigator.getGamepads();\n\n        for (const pad of pads) {\n            if (!pad) {\n                continue;\n            }\n\n            if (!this.players[pad.index]) {\n                this.createPlayer(pad);\n            }\n\n            this.players[pad.index].update(pad);\n        }\n    }\n\n    public getPlayers() {\n        return this.players;\n    }\n\n    private createPlayer(pad: Gamepad) {\n        const player = new Player();\n        this.players[pad.index] = player;\n\n        player.shotEmitter.subscribe(bullet => {\n            this.bulletEmitter.emit(bullet);\n        });\n\n        player.deathEmitter.subscribe(() => {\n            this.players = this.players.filter(p => p !== player);\n        });\n    }\n}\n","type Callback<T> = (value: T) => void;\n\nexport default class Emitter<T> {\n    private watchers: Array<Callback<T>> = [];\n\n    public subscribe(fn: Callback<T>) {\n        this.watchers.push(fn);\n    }\n\n    public emit(value: T) {\n        this.watchers.forEach(fn => fn(value));\n    }\n}\n","import Bullet from './Bullet';\nimport Emitter from './Emitter';\nimport Tank from './Tank';\nimport E_100 from './tanks/E-100';\nimport Vector from './Vector';\n\nconst colors = [\n    'green',\n    'red',\n    'blue',\n];\n\nexport default class Player {\n    public shotEmitter = new Emitter<Bullet>();\n    public deathEmitter = new Emitter();\n\n    public hp = 100;\n    public kills = 0;\n    public deaths = 0;\n\n    public color: string;\n\n    private pad: Gamepad;\n\n    private tank: Tank;\n\n    private lastShotTimestamp = Date.now();\n\n    constructor() {\n        this.tank = new Tank(E_100);\n    }\n\n    public update(pad: Gamepad) {\n        this.pad = pad;\n\n        this.color = colors[this.pad.index];\n\n        const clickedButtons = this.pad.buttons.map(b => b.pressed);\n\n        clickedButtons.forEach((buttonClicked, i) => {\n            if (clickedButtons[i]) {\n                if (i === 5) {\n                    this.maybeShot();\n                }\n            }\n        });\n    }\n\n    public move() {\n        let moveVector = new Vector(this.pad.axes[0], this.pad.axes[1]);\n\n        if (this.pad.buttons[7].pressed) {\n            moveVector = Vector.times(moveVector, 2);\n        }\n\n        this.tank.move(moveVector);\n\n        if (this.pad.axes[2] !== 0 && this.pad.axes[3] !== 0) {\n            const gunAngle = Vector.toAngle(new Vector(this.pad.axes[2], this.pad.axes[3]));\n\n            this.tank.rotateGun(gunAngle);\n        }\n    }\n\n    public draw(ctx: CanvasRenderingContext2D) {\n        this.tank.draw(ctx);\n    }\n\n    public handleHit(bullet: Bullet) {\n        if (bullet.owner === this) {\n            return;\n        }\n\n        this.hp -= 10;\n\n        if (this.hp <= 0) {\n            this.deathEmitter.emit({});\n        }\n    }\n\n    private maybeShot() {\n        if (this.lastShotTimestamp + this.tank.getShotFrequency() > Date.now()) {\n            return;\n        }\n\n        const gunVector = Vector.fromAngle(this.tank.getGunAngle(), this.tank.getBulletSpeed());\n        const startPosition = Vector.add(this.tank.getPosition(), Vector.toSize(gunVector, this.tank.getGunSize()));\n\n        const bullet = new Bullet(startPosition, gunVector, this);\n\n        this.lastShotTimestamp = Date.now();\n        this.shotEmitter.emit(bullet);\n    }\n}\n","import Player from './Player';\nimport { drawArc } from './utils';\nimport Vector from './Vector';\n\nexport default class Bullet {\n    public radius = 3;\n\n    public constructor(\n        public position: Vector,\n        public velocity: Vector,\n        public owner: Player,\n    ) { }\n\n    public draw(ctx: CanvasRenderingContext2D) {\n        drawArc(ctx, this.position.x, this.position.y, this.radius, 'black');\n    }\n\n    public move() {\n        this.position.x += this.velocity.x;\n        this.position.y += this.velocity.y;\n    }\n}\n","export function drawArc(ctx: CanvasRenderingContext2D, x: number, y: number, r: number, color: string) {\n    ctx.beginPath();\n    ctx.fillStyle = color;\n    ctx.arc(x, y, r, 0, 2 * Math.PI);\n    ctx.fill();\n}\n\nexport function drawImage({\n    ctx, image, x, y, width, height, canvasOffsetX, canvasOffsetY, angle = 0,\n    center,\n}: IImageDrawingParams) {\n    ctx.save();\n\n    if (!center) {\n        center = { x: 0, y: 0 };\n    }\n\n    ctx.translate(canvasOffsetX, canvasOffsetY);\n    ctx.rotate(angle);\n\n    ctx.drawImage(\n        image,\n        x, y, width, height,\n        -width / 2, -height / 2, width, height,\n    );\n\n    ctx.restore();\n}\n\ninterface IImageDrawingParams {\n    ctx: CanvasRenderingContext2D;\n    image: HTMLImageElement;\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n    canvasOffsetX: number;\n    canvasOffsetY: number;\n    angle?: number;\n    center?: {\n        x: number;\n        y: number;\n    };\n}\n\nexport function loadImage(url: string) {\n    return new Promise<HTMLImageElement>((res, rej) => {\n        const image = new Image();\n        image.onload = () => res(image);\n        image.onerror = rej;\n        image.onabort = rej;\n        image.src = url;\n    });\n}\n\nexport function createArray(size: number, filler: any) {\n    const arr = new Array(size);\n    for (let i = 0; i < size; i++) {\n        arr[i] = filler;\n    }\n    return arr;\n}\n\ninterface ICanvasDrawingOptions {\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n    ctx: CanvasRenderingContext2D;\n    strokeStyle?: string;\n    strokeWidth?: number;\n}\n\nexport function drawRect({ ctx, x, y, width, height, strokeStyle, strokeWidth }: ICanvasDrawingOptions) {\n    if (strokeStyle && strokeWidth) {\n        ctx.strokeStyle = strokeStyle;\n        ctx.lineWidth = strokeWidth;\n        ctx.strokeRect(x, y, width, height);\n    }\n}\n\nexport function normalizeAngle(angle: number) {\n    angle = angle % (2 * Math.PI);\n\n    if (angle > Math.PI) {\n        angle -= 2 * Math.PI;\n    }\n\n    if (angle < -Math.PI) {\n        angle += 2 * Math.PI;\n    }\n\n    return angle;\n}\n","import { drawImage, drawRect, loadImage, normalizeAngle } from './utils';\nimport Vector from './Vector';\n\nexport interface ITankModel {\n    imgUrl: string;\n    tank: IRect;\n    gun: IRect;\n    tankCenter: Vector;\n    gunCenter: Vector;\n    gunSize: number;\n    tankSpeed: number;\n    tankRotationSpeed: number;\n    gunRotationSpeed: number;\n    bulletSpeed: number;\n    shotFrequency: number;\n}\n\ninterface IRect {\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n}\n\nexport default class Tank {\n    private model: ITankModel;\n    private gunAngle = Math.atan2(0, 0);\n    private tankAngle = Math.atan2(0, 0);\n    private image: HTMLImageElement;\n    private position = new Vector(\n        Math.random() * 100,\n        Math.random() * 100,\n    );\n\n    constructor(model: ITankModel) {\n        this.model = model;\n\n        (window as any).gunRect = model.gun;\n        (window as any).gunCenter = model.gunCenter;\n\n        loadImage(model.imgUrl).then(image => this.image = image);\n    }\n\n    public draw(ctx: CanvasRenderingContext2D) {\n        if (!this.image) {\n            return;\n        }\n\n        this.drawTank(ctx);\n        this.drawGun(ctx);\n    }\n\n    public move(moveVector: Vector) {\n        const moveAngle = Vector.toAngle(moveVector);\n\n        const multiplier = Math.abs(Math.cos(moveAngle - this.tankAngle) * this.model.tankSpeed);\n\n        moveVector = Vector.times(moveVector, multiplier);\n\n        if (moveVector.x !== 0 || moveVector.y !== 0) {\n            this.rotateTank(moveAngle);\n        }\n\n        this.position = Vector.add(this.position, moveVector);\n    }\n\n    public rotateTank(angle: number) {\n        const movement = Math.min(this.model.tankRotationSpeed, Math.abs(this.tankAngle - angle));\n\n        if ((this.tankAngle - angle > 0 && this.tankAngle - angle < Math.PI) ||\n            this.tankAngle - angle < -Math.PI) {\n            this.tankAngle -= movement;\n        } else {\n            this.tankAngle += movement;\n        }\n\n        this.tankAngle = normalizeAngle(this.tankAngle);\n    }\n\n    public rotateGun(gunAngle: number) {\n        const movement = Math.min(this.model.gunRotationSpeed, Math.abs(this.gunAngle - gunAngle));\n\n        if ((this.gunAngle - gunAngle > 0 && this.gunAngle - gunAngle < Math.PI) ||\n            this.gunAngle - gunAngle < -Math.PI) {\n            this.gunAngle -= movement;\n        } else {\n            this.gunAngle += movement;\n        }\n\n        this.gunAngle = normalizeAngle(this.gunAngle);\n    }\n\n    public getGunAngle() {\n        return this.gunAngle;\n    }\n\n    public getBulletSpeed() {\n        return this.model.bulletSpeed;\n    }\n\n    public getPosition() {\n        return this.position;\n    }\n\n    public getGunSize() {\n        return this.model.gunSize;\n    }\n\n    public getShotFrequency() {\n        return this.model.shotFrequency;\n    }\n\n    private drawTank(ctx: CanvasRenderingContext2D) {\n        drawImage({\n            ctx,\n            image: this.image,\n            x: this.model.tank.x,\n            y: this.model.tank.y,\n            width: this.model.tank.width,\n            height: this.model.tank.height,\n            canvasOffsetX: this.position.x,\n            canvasOffsetY: this.position.y,\n            angle: this.tankAngle,\n            center: this.model.tankCenter,\n        });\n\n        if ((window as any).debugMode) {\n            drawRect({\n                ctx,\n                x: this.position.x,\n                y: this.position.y,\n                width: this.model.tank.width,\n                height: this.model.tank.height,\n                strokeStyle: 'red',\n                strokeWidth: 1,\n            });\n        }\n    }\n\n    private drawGun(ctx: CanvasRenderingContext2D) {\n        drawImage({\n            ctx,\n            image: this.image,\n            x: this.model.gun.x,\n            y: this.model.gun.y,\n            width: this.model.gun.width,\n            height: this.model.gun.height,\n            canvasOffsetX: this.position.x,\n            canvasOffsetY: this.position.y,\n            angle: this.gunAngle,\n            center: this.model.gunCenter,\n        });\n\n        if ((window as any).debugMode) {\n            drawRect({\n                ctx,\n                x: this.position.x,\n                y: this.position.y,\n                width: this.model.gun.width,\n                height: this.model.gun.height,\n                strokeStyle: 'blue',\n                strokeWidth: 1,\n            });\n        }\n    }\n}\n","import { normalizeAngle } from './utils';\n\nexport default class Vector {\n    public static copy(vector: Vector) {\n        return new Vector(vector.x, vector.y);\n    }\n\n    public static add(v1: Vector, v2: Vector) {\n        return new Vector(\n            v1.x + v2.x,\n            v1.y + v2.y,\n        );\n    }\n\n    public static times(v: Vector, value: number) {\n        return new Vector(\n            v.x * value,\n            v.y * value,\n        );\n    }\n\n    public static squaredDistance(v1: Vector, v2: Vector) {\n        return (v1.x - v2.x) ** 2 + (v1.y - v2.y) ** 2;\n    }\n\n    public static toSize(v: Vector, size: number) {\n        const times = size / Math.sqrt(v.x * v.x + v.y * v.y);\n        return Vector.times(v, times);\n    }\n\n    public static fromAngle(angle: number, radius: number) {\n        return new Vector(\n            Math.cos(angle + Math.PI / 2) * radius,\n            Math.sin(angle + Math.PI / 2) * radius,\n        );\n    }\n\n    public static toAngle(v: Vector) {\n        const angle = Math.atan2(v.y, v.x) - Math.PI / 2;\n        return normalizeAngle(angle);\n    }\n\n    constructor(\n        public x: number,\n        public y: number,\n    ) { }\n}\n\n(window as any).Vector = Vector;\n","export default {\n    imgUrl: '../images/tanks/E-100_strip2.png',\n    tank: { x: 0, y: 0, width: 100, height: 170 },\n    gun: { x: 95, y: 10, width: 100, height: 200 },\n    tankCenter: { x: 50, y: 85 },\n    gunCenter: { x: 145, y: 115 },\n    gunSize: 70,\n    tankSpeed: 5,\n    tankRotationSpeed: Math.PI / 20,\n    gunRotationSpeed: Math.PI / 30,\n    bulletSpeed: 20,\n    shotFrequency: 200,\n};\n"]}