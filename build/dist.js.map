{"version":3,"sources":["index.ts","controllers/ControllerManager.ts","utils/Emitter.ts","controllers/MouseAndKeyboardController.ts","utils/Vector.ts","utils/utils.ts","controllers/PadController.ts","Game.ts","collections/BackgroundManager.ts","models/ClassicBackground.ts","collections/BulletManager.ts","collections/UnitManager.ts","models/Soldier.ts","utils/Sprite.ts","utils/TimeController.ts","models/Bullet.ts","models/Tank.ts","engine/Renderer.ts","engine/Scene.ts","engine/CollisionManager.ts","engine/WholeViewCamera.ts","players/HumanTankPlayer.ts","tank-models/E-100.ts"],"names":[],"mappings":"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","file":"","sourcesContent":["import ControllerManager from './controllers/ControllerManager';\nimport Game from './Game';\nimport HumanTankPlayer from './players/HumanTankPlayer';\nimport E100 from './tank-models/E-100';\n\nconst controllerManager = new ControllerManager();\n\ncontrollerManager.newControllerEmitter.subscribe((controller) => {\n    if (controllerManager.getControllers().length === 2) {\n        start();\n    }\n});\n\nfunction start() {\n    const controllers = controllerManager.getControllers();\n\n    const game = new Game({\n        audioTheme: '/audio/theme/FragileCeiling.ogg',\n        backgrounds: [{ colors: ['#3a3', '#6a2'] }],\n        units: [{\n            type: 'soldier',\n            position: { x: 100, y: 100 },\n        }, {\n            type: 'tank',\n            position: { x: 200, y: 200 },\n            player: new HumanTankPlayer(controllers[0]),\n            model: E100,\n        }, {\n            type: 'tank',\n            position: { x: 300, y: 300 },\n            player: new HumanTankPlayer(controllers[1]),\n            model: E100,\n        }],\n    });\n\n    game.play();\n}\n","import Emitter from '../utils/Emitter';\nimport IController from './IController';\nimport MouseAndKeyboardController from './MouseAndKeyboardController';\nimport PadController from './PadController';\n\nexport default class ControllerManager {\n    public newControllerEmitter = new Emitter<IController>();\n    private padControllers: { [id: string]: PadController } = {};\n    private mouseAndKeyboardController = new MouseAndKeyboardController();\n\n    constructor() {\n        setTimeout(() => {\n            this.update();\n            this.newControllerEmitter.emit(this.mouseAndKeyboardController);\n        });\n    }\n\n    public getControllers(): IController[] {\n        return [\n            this.mouseAndKeyboardController,\n            ...Object.keys(this.padControllers).map(id => this.padControllers[id]),\n        ].filter(c => !!c);\n    }\n\n    public update = () => {\n        this.updatePads();\n        requestAnimationFrame(this.update);\n    }\n\n    private updatePads() {\n        const pads = navigator.getGamepads();\n\n        Array.from(pads).forEach((pad, index) => {\n            if (!pad) {\n                return;\n            }\n\n            if (!this.padControllers[pad.id]) {\n                this.addPad(pad);\n                this.padControllers[pad.id].update(pad);\n                this.newControllerEmitter.emit(this.padControllers[pad.id]);\n            } else {\n                this.padControllers[pad.id].update(pad);\n            }\n        });\n    }\n\n    private addPad(pad: Gamepad) {\n        this.padControllers[pad.id] = new PadController();\n    }\n}\n","type Callback<T> = (value: T) => void;\n\nexport default class Emitter<T> {\n    private watchers: Array<Callback<T>> = [];\n\n    public subscribe(fn: Callback<T>) {\n        this.watchers.push(fn);\n    }\n\n    public emit(value: T) {\n        this.watchers.forEach(fn => fn(value));\n    }\n}\n","import Vector from '../utils/Vector';\nimport IController from './IController';\n\nconst defaultKeyBinding = {\n    SPEED_UP: 16,\n};\n\nconst defaultMouseButtonBinding = {\n    SHOT_KEY: 1,\n};\n\nexport default class MouseAndKeyboardController implements IController {\n    private pressedButtons: { [key: number]: boolean } = {};\n    private pressedMousedButtons: { [key: number]: boolean } = {};\n    private gunVector = { x: 0, y: 0 };\n\n    constructor() {\n        window.addEventListener('keydown', (e) => {\n            this.pressedButtons[e.keyCode] = true;\n            if (e.preventDefault) { e.preventDefault(); }\n            if (e.stopPropagation) { e.stopPropagation(); }\n            // console.log(e.keyCode);\n        });\n\n        window.addEventListener('keyup', (e) => {\n            this.pressedButtons[e.keyCode] = false;\n            if (e.preventDefault) { e.preventDefault(); }\n            if (e.stopPropagation) { e.stopPropagation(); }\n        });\n\n        window.addEventListener('mousemove', (e) => {\n            const { clientWidth, clientHeight } = (e.target as Element);\n\n            this.gunVector = {\n                x: e.clientX / clientWidth - 1 / 2,\n                y: e.clientY / clientHeight - 1 / 2,\n            };\n        });\n\n        window.addEventListener('mousedown', (e) => {\n            this.pressedMousedButtons[e.which] = true;\n            if (e.preventDefault) { e.preventDefault(); }\n            if (e.stopPropagation) { e.stopPropagation(); }\n        });\n\n        window.addEventListener('mouseup', (e) => {\n            this.pressedMousedButtons[e.which] = false;\n            if (e.preventDefault) { e.preventDefault(); }\n            if (e.stopPropagation) { e.stopPropagation(); }\n        });\n    }\n\n    public get key() {\n        return { ...defaultKeyBinding, ...defaultMouseButtonBinding };\n    }\n\n    public isPressed(button: number) {\n        return !!this.pressedButtons[button] || !!this.pressedMousedButtons[button];\n    }\n\n    public getLeftAxis() {\n        const vector = new Vector(\n            +this.isPressed(68) - +this.isPressed(65),\n            +this.isPressed(83) - +this.isPressed(87),\n        );\n\n        return Vector.toSize(vector, 1);\n    }\n\n    public getRightAxis() {\n        return this.gunVector;\n    }\n}\n","import { normalizeAngle } from './utils';\n\nexport default class Vector {\n    public static copy(vector: Vector) {\n        return new Vector(vector.x, vector.y);\n    }\n\n    public static add(v1: Vector, v2: Vector) {\n        return new Vector(\n            v1.x + v2.x,\n            v1.y + v2.y,\n        );\n    }\n\n    public static times(v: Vector, value: number) {\n        return new Vector(\n            v.x * value,\n            v.y * value,\n        );\n    }\n\n    public static squaredDistance(v1: Vector, v2: Vector) {\n        return (v1.x - v2.x) ** 2 + (v1.y - v2.y) ** 2;\n    }\n\n    public static toSize(v: Vector, size: number) {\n        let times = size / Math.sqrt(v.x * v.x + v.y * v.y);\n\n        if (!Number.isFinite(times)) {\n            times = 0;\n        }\n\n        return Vector.times(v, times);\n    }\n\n    public static getSize(v: Vector) {\n        return Math.sqrt(v.x ** 2 + v.y ** 2);\n    }\n\n    public static fromAngle(angle: number, radius: number) {\n        return new Vector(\n            Math.cos(angle + Math.PI / 2) * radius,\n            Math.sin(angle + Math.PI / 2) * radius,\n        );\n    }\n\n    public static toAngle(v: Vector) {\n        const angle = Math.atan2(v.y, v.x) - Math.PI / 2;\n        return normalizeAngle(angle);\n    }\n\n    public static fromDiff(from: Vector, to: Vector) {\n        return new Vector(to.x - from.x, to.y - from.y);\n    }\n\n    constructor(\n        public x: number,\n        public y: number,\n    ) { }\n}\n\n(window as any).Vector = Vector;\n","export function drawArc(ctx: CanvasRenderingContext2D, x: number, y: number, r: number, color: string) {\n    ctx.beginPath();\n    ctx.fillStyle = color;\n    ctx.arc(x, y, r, 0, 2 * Math.PI);\n    ctx.fill();\n}\n\nexport function drawImage({\n    ctx, image, x, y,\n    width, height,\n    canvasOffsetX, canvasOffsetY,\n    angle = 0,\n    center,\n    zoom = 1,\n}: IImageDrawingParams) {\n    ctx.save();\n\n    if (!center) {\n        center = { x: 0, y: 0 };\n    }\n\n    ctx.translate(canvasOffsetX, canvasOffsetY);\n    ctx.rotate(angle);\n\n    ctx.drawImage(\n        image,\n        x, y, width, height,\n        -width / 2 * zoom, -height / 2 * zoom, width * zoom, height * zoom,\n    );\n\n    ctx.restore();\n}\n\ninterface IImageDrawingParams {\n    ctx: CanvasRenderingContext2D;\n    image: HTMLImageElement;\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n    canvasOffsetX: number;\n    canvasOffsetY: number;\n    angle?: number;\n    center?: {\n        x: number;\n        y: number;\n    };\n    zoom?: number;\n}\n\nexport function loadImage(url: string) {\n    return new Promise<HTMLImageElement>((res, rej) => {\n        const image = new Image();\n        image.onload = () => res(image);\n        image.onerror = rej;\n        image.onabort = rej;\n        image.src = url;\n    });\n}\n\nexport function createArray<T>(size: number, filler: T) {\n    const arr = new Array<T>(size);\n    for (let i = 0; i < size; i++) {\n        arr[i] = filler;\n    }\n    return arr;\n}\n\ninterface ICanvasDrawingOptions {\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n    ctx: CanvasRenderingContext2D;\n    strokeStyle?: string;\n    strokeWidth?: number;\n}\n\nexport function drawRect({ ctx, x, y, width, height, strokeStyle, strokeWidth }: ICanvasDrawingOptions) {\n    if (strokeStyle && strokeWidth) {\n        ctx.strokeStyle = strokeStyle;\n        ctx.lineWidth = strokeWidth;\n        ctx.strokeRect(x, y, width, height);\n    }\n}\n\nexport function normalizeAngle(angle: number) {\n    angle = angle % (2 * Math.PI);\n\n    if (angle > Math.PI) {\n        angle -= 2 * Math.PI;\n    }\n\n    if (angle < -Math.PI) {\n        angle += 2 * Math.PI;\n    }\n\n    return angle;\n}\n\nexport function joinCollections<T>(collection1: T): T;\nexport function joinCollections<T, P>(collection1: T, collection2: P): T & P;\nexport function joinCollections<T, P, R>(collection1: T, collection2: P, collection3: R): T & P & R;\nexport function joinCollections<T>(...collections: T[][]) {\n    return {\n        *[Symbol.iterator]() {\n            for (const collection of collections) {\n                for (const element of collection) {\n                    yield element;\n                }\n            }\n        },\n    };\n}\n\nexport function mod(x: number, y: number) {\n    const result = x % y;\n\n    return (result >= 0) ?\n        result :\n        result + y;\n}\n","import Vector from '../utils/Vector';\nimport IController from './IController';\n\nconst defaultKeyBinding = {\n    SHOT_KEY: 5,\n    SPEED_UP: 7,\n};\n\nexport default class PadController implements IController {\n    public get key() {\n        return defaultKeyBinding;\n    }\n\n    private pad: Gamepad;\n\n    public update(pad: Gamepad) {\n        this.pad = pad;\n    }\n\n    public isPressed(button: number) {\n        return this.pad.buttons[button].pressed;\n    }\n\n    public getLeftAxis() {\n        return new Vector(this.pad.axes[0], this.pad.axes[1]);\n    }\n\n    public getRightAxis() {\n        return new Vector(this.pad.axes[2], this.pad.axes[3]);\n    }\n}\n","import { Howl } from 'howler';\nimport BackgroundManager, { IStaticBackgroundOptions } from './collections/BackgroundManager';\nimport BulletManager from './collections/BulletManager';\nimport UnitManager, { IUnitOptions } from './collections/UnitManager';\nimport Renderer from './engine/Renderer';\nimport Scene from './engine/Scene';\nimport WholeViewCamera from './engine/WholeViewCamera';\n\ninterface IGameOptions {\n    audioTheme: string;\n    units: IUnitOptions[];\n    backgrounds: IStaticBackgroundOptions[];\n}\n\nexport default class Game {\n    private renderer: Renderer;\n    private theme: Howl;\n\n    constructor(map: IGameOptions) {\n        this.theme = new Howl({ src: map.audioTheme, loop: true, preload: true });\n\n        const canvas = document.getElementById('canvas') as HTMLCanvasElement;\n        const ctx = canvas.getContext('2d') as CanvasRenderingContext2D;\n\n        const unitManager = new UnitManager();\n        const bulletManager = new BulletManager();\n\n        for (const object of map.units) {\n            unitManager.create(object);\n        }\n\n        unitManager.bulletEmitter.subscribe(bullet => bulletManager.add(bullet));\n\n        const backgroundManager = BackgroundManager.fromJSON(map.backgrounds);\n\n        const scene = new Scene(\n            backgroundManager,\n            bulletManager,\n            unitManager,\n        );\n\n        const camera = new WholeViewCamera();\n\n        camera.track(unitManager);\n\n        this.renderer = new Renderer({\n            scene,\n            ctx,\n            camera,\n        });\n    }\n\n    public play() {\n        this.renderer.render();\n        this.theme.play();\n    }\n\n    public pause() {\n        this.renderer.stop();\n        this.theme.pause();\n    }\n}\n","import ClassicBackground from '../models/ClassicBackground';\nimport IGameObject from '../models/IGameObject';\nimport IGameObjectCollection from './IGameObjectCollection';\n\nexport interface IStaticBackgroundOptions {\n    colors: string[];\n}\n\nexport default class BackgroundManager implements IGameObjectCollection {\n    public static fromJSON(backgrounds: IStaticBackgroundOptions[]) {\n        const backgroundManager = new BackgroundManager();\n\n        // TODO\n        for (const background of backgrounds) {\n            backgroundManager.add(\n                new ClassicBackground(background.colors),\n            );\n        }\n\n        return backgroundManager;\n    }\n\n    public objectsCollide = false;\n    private backgrounds: IGameObject[] = [];\n\n    public [Symbol.iterator]() {\n        return this.backgrounds[Symbol.iterator]();\n    }\n\n    public add(bg: IGameObject) {\n        this.backgrounds.push(bg);\n    }\n}\n","import { ICameraOptions } from '../engine/ICamera';\nimport { mod } from '../utils/utils';\nimport IGameObject from './IGameObject';\n\nexport default class ClassicBackground implements IGameObject {\n    public position = { x: 0, y: 0 };\n    public type = 'background';\n\n    constructor(private colors: string[]) { }\n\n    public draw(ctx: CanvasRenderingContext2D, { center, width, height }: ICameraOptions) {\n        const tileSize = 100;\n\n        const startX = Math.floor((center.x - width / 2) / tileSize) * tileSize;\n        const startY = Math.floor((center.y - height / 2) / tileSize) * tileSize;\n\n        for (let x = startX; x < center.x + width / 2; x += tileSize) {\n            for (let y = startY; y < center.y + height / 2; y += tileSize) {\n                // TODO: this.colors.length\n                ctx.fillStyle = this.colors[mod(x + y, tileSize * 2) / tileSize];\n                ctx.fillRect(x, y, tileSize + 1, tileSize + 1);\n            }\n        }\n    }\n\n    public move() {\n        // Empty - TODO (?)\n    }\n}\n","import Bullet from '../models/Bullet';\nimport IGameObjectCollection from './IGameObjectCollection';\n\nexport default class BulletManager implements IGameObjectCollection {\n    public objectsCollide = true;\n    private bullets: Bullet[] = [];\n\n    public [Symbol.iterator]() {\n        return this.bullets[Symbol.iterator]();\n    }\n\n    public add(bullet: Bullet) {\n        this.bullets.push(bullet);\n\n        bullet.destroyEmitter.subscribe(() => {\n            this.bullets = this.bullets.filter(b => b !== bullet);\n        });\n    }\n}\n","import Bullet from '../models/Bullet';\nimport IGameObject from '../models/IGameObject';\nimport Soldier, { ISoldierOptions } from '../models/Soldier';\nimport Tank, { ITankOptions } from '../models/Tank';\nimport Emitter from '../utils/Emitter';\nimport IGameObjectCollection from './IGameObjectCollection';\n\nexport type IUnitOptions = ISoldierOptions | ITankOptions;\n\nexport default class UnitManager implements IGameObjectCollection {\n    public bulletEmitter = new Emitter<Bullet>();\n    public objectsCollide = true;\n\n    private units: IGameObject[] = [];\n\n    public [Symbol.iterator]() {\n        return this.units[Symbol.iterator]();\n    }\n\n    public create(options: IUnitOptions) {\n        const unit = this.getInstance(options);\n\n        // TODO.\n        if (unit.type === 'soldier') {\n            unit.track(this);\n        }\n\n        unit.bulletEmitter.subscribe(bullet => this.bulletEmitter.emit(bullet));\n        unit.deathEmitter.subscribe(() => {\n            this.units = this.units.filter(u => u !== unit);\n        });\n\n        this.units.push(unit);\n    }\n\n    private getInstance(options: IUnitOptions) {\n        switch (options.type) {\n            case 'soldier':\n                return new Soldier(options);\n            case 'tank':\n                return new Tank(options);\n            default:\n                throw new Error('not implemented for ' + (options as any).type);\n        }\n    }\n}\n","import Emitter from '../utils/Emitter';\nimport Sprite from '../utils/Sprite';\nimport TimeController from '../utils/TimeController';\nimport Vector from '../utils/Vector';\nimport Bullet from './Bullet';\nimport IGameObject, { ICollidingGameObject } from './IGameObject';\n\ninterface ISprites {\n    move: Sprite;\n    idle: Sprite;\n    distanceAttack: Sprite;\n    meleeAtack: Sprite;\n    reload: Sprite;\n}\n\nexport interface ISoldierOptions {\n    position: Vector;\n    type: 'soldier';\n}\n\nconst URL = '../images/soldier/handgun/';\n\nexport default class Soldier implements IGameObject {\n    public bulletEmitter = new Emitter<Bullet>();\n    public deathEmitter = new Emitter();\n\n    public position: Vector;\n    public radius = 30;\n    public type: 'soldier' = 'soldier';\n\n    private hp = 100;\n    private ammo = 6;\n    private magazineSize = 6;\n    private speed = 2;\n    private bulletSpeed = 10;\n    private angle = 0;\n    private trackedObjects: Iterable<IGameObject>;\n    private turningLeft = Math.random() < 0.5;\n    private shotTimeController = new TimeController(1000);\n    private bulletDamage = 10;\n    private bulletRadius = 3;\n\n    private handgunSprites: ISprites = {\n        move: new Sprite({\n            url: URL + 'move.png', frameDuration: 50,\n            numberOfFrames: 20, zoom: 0.25,\n        }),\n        idle: new Sprite({\n            url: URL + 'idle.png', frameDuration: 50,\n            numberOfFrames: 20, zoom: 0.25,\n        }),\n        distanceAttack: new Sprite({\n            url: URL + 'distanceAttack.png', frameDuration: 50,\n            numberOfFrames: 3, zoom: 0.25, once: true,\n        }),\n        meleeAtack: new Sprite({\n            url: URL + 'meleeAttack.png', frameDuration: 50,\n            numberOfFrames: 10, zoom: 0.25,\n        }),\n        reload: new Sprite({\n            url: URL + 'reload.png', frameDuration: 50,\n            numberOfFrames: 15, zoom: 0.25, once: true,\n        }),\n    };\n\n    private currentSprite = this.handgunSprites.idle;\n\n    constructor({ position }: ISoldierOptions) {\n        this.position = position;\n    }\n\n    public draw(ctx: CanvasRenderingContext2D) {\n        this.currentSprite.draw(ctx, this.position, this.angle);\n    }\n\n    public track(iterable: Iterable<IGameObject>) {\n        this.trackedObjects = iterable;\n    }\n\n    public handleHit(object: ICollidingGameObject) {\n        if (object.type !== 'bullet' || object.owner === this) {\n            return;\n        }\n\n        this.hp -= (object as any).damage;\n\n        if (this.hp <= 0) {\n            this.deathEmitter.emit({});\n        }\n    }\n\n    public move() {\n        const opponent = this.findBestOpponent();\n\n        if (!opponent) {\n            return;\n        }\n\n        const diffVector = Vector.fromDiff(this.position, opponent.position);\n        const distance = Vector.getSize(diffVector);\n\n        if (distance > 1000) {\n            return;\n        }\n\n        // TODO: Improve this part.\n        if (this.currentSprite.hasToFinish()) {\n            return;\n        }\n\n        let moveVector: Vector;\n\n        if (distance > 400) {\n            moveVector = Vector.toSize(diffVector, Math.min(this.speed, distance));\n            this.setSprite(this.handgunSprites.move);\n        } else if (distance > 300) {\n            if (this.hasToReload()) {\n                this.reload();\n                return;\n            }\n\n            if (this.shotTimeController.can()) {\n                this.shot(opponent);\n                return;\n            }\n\n            if (Math.random() < 0.02) {\n                this.turningLeft = !this.turningLeft;\n            }\n\n            if (this.turningLeft) {\n                moveVector = Vector.toSize({ x: -diffVector.y, y: diffVector.x }, this.speed / 2);\n            } else {\n                moveVector = Vector.toSize({ x: diffVector.y, y: -diffVector.x }, this.speed / 2);\n            }\n\n            this.setSprite(this.handgunSprites.idle);\n\n        } else {\n            moveVector = Vector.toSize({ x: -diffVector.x, y: -diffVector.y }, this.speed);\n            this.setSprite(this.handgunSprites.move);\n        }\n\n        this.position = Vector.add(this.position, moveVector);\n        this.angle = Vector.toAngle(diffVector) + Math.PI / 2;\n    }\n\n    private findBestOpponent() {\n        const opponents = Array.from(this.trackedObjects).filter(obj => obj !== this);\n\n        let bestOpponent = opponents[0];\n\n        if (!bestOpponent) {\n            return;\n        }\n\n        let bestDistance = Vector.squaredDistance(opponents[0].position, this.position);\n\n        for (const opponent of opponents.slice(1)) {\n            const distance = Vector.squaredDistance(opponent.position, this.position);\n            if (distance < bestDistance) {\n                bestOpponent = opponent;\n                bestDistance = distance;\n            }\n        }\n\n        return bestOpponent;\n    }\n\n    private hasToReload() {\n        return this.ammo === 0;\n    }\n\n    private reload() {\n        this.ammo = this.magazineSize;\n        this.setSprite(this.handgunSprites.reload);\n    }\n\n    private shot(object: IGameObject) {\n        this.setSprite(this.handgunSprites.distanceAttack);\n        this.ammo--;\n\n        const velocity = Vector.toSize(Vector.fromDiff(this.position, object.position), this.bulletSpeed);\n\n        const translation = Vector.toSize(velocity, 40);\n        const spriteShotModifier = Vector.add(translation, { x: -translation.y * 0.4, y: translation.x * 0.4 });\n        const startPosition = Vector.add(this.position, spriteShotModifier);\n\n        const bullet = new Bullet({\n            position: startPosition,\n            velocity,\n            owner: this,\n            damage: this.bulletDamage,\n            radius: this.bulletRadius,\n        });\n\n        this.bulletEmitter.emit(bullet);\n    }\n\n    private setSprite(sprite: Sprite) {\n        if (this.currentSprite === sprite) {\n            return;\n        }\n\n        this.currentSprite = sprite;\n        this.currentSprite.reset();\n    }\n}\n","import { drawImage, loadImage } from './utils';\nimport Vector from './Vector';\n\ninterface ISpriteOptions {\n    url: string;\n    frameDuration: number;\n    numberOfFrames: number;\n    zoom?: number;\n    once?: boolean;\n}\n\nexport default class Sprite {\n    private currentFrameIndex: number;\n    private frameWidth: number;\n    private frameHeight: number;\n    private image: HTMLImageElement;\n    private frameDuration: number;\n    private numberOfFrames: number;\n    private lastTimestamp = 0;\n    private zoom: number;\n    private once: boolean;\n\n    constructor(options: ISpriteOptions) {\n        this.currentFrameIndex = 0;\n        this.frameDuration = options.frameDuration;\n        this.numberOfFrames = options.numberOfFrames;\n        this.zoom = options.zoom || 1;\n        this.once = !!options.once;\n\n        loadImage(options.url).then(image => {\n            this.image = image;\n            this.frameWidth = image.naturalWidth / options.numberOfFrames;\n            this.frameHeight = image.height;\n        });\n    }\n\n    public reset() {\n        this.currentFrameIndex = 0;\n    }\n\n    public hasToFinish() {\n        return !this.isLastFrame() && this.once;\n    }\n\n    public isLastFrame() {\n        return this.currentFrameIndex === this.numberOfFrames - 1;\n    }\n\n    public draw(ctx: CanvasRenderingContext2D, position: Vector, angle: number) {\n        if (!this.image) {\n            return;\n        }\n\n        if (Date.now() >= this.lastTimestamp + this.frameDuration) {\n            this.nextFrame();\n            this.lastTimestamp = Date.now();\n        }\n\n        drawImage({\n            ctx,\n            angle,\n            width: this.frameWidth,\n            height: this.frameHeight,\n            canvasOffsetX: position.x,\n            canvasOffsetY: position.y,\n            image: this.image,\n            x: this.frameWidth * this.currentFrameIndex,\n            y: 0,\n            zoom: this.zoom,\n        });\n    }\n\n    private nextFrame() {\n        if (!this.isLastFrame() || !this.once) {\n            this.currentFrameIndex = (this.currentFrameIndex + 1) % this.numberOfFrames;\n        }\n    }\n\n}\n","export default class TimeController {\n    private lastTimestamp = 0;\n    private debounceTime = 0;\n\n    constructor(debounceTime: number) {\n        this.debounceTime = debounceTime;\n    }\n\n    public can() {\n        const availible = Date.now() > this.debounceTime + this.lastTimestamp;\n        if (availible) {\n            this.lastTimestamp = Date.now();\n        }\n\n        return availible;\n    }\n}\n","import { ICameraOptions } from '../engine/ICamera';\nimport IGameObject from '../models/IGameObject';\nimport Emitter from '../utils/Emitter';\nimport { drawArc } from '../utils/utils';\nimport Vector from '../utils/Vector';\n\ninterface IBulletOptions {\n    position: Vector;\n    velocity: Vector;\n    owner: IGameObject;\n    damage: number;\n    radius: number;\n}\n\nexport default class Bullet implements IGameObject {\n    public destroyEmitter = new Emitter();\n    public type: 'bullet' = 'bullet';\n\n    public get position() {\n        return this.options.position;\n    }\n\n    public get radius() {\n        return this.options.radius;\n    }\n\n    public get damage() {\n        return this.options.damage;\n    }\n\n    public constructor(private options: IBulletOptions) { }\n\n    public draw(ctx: CanvasRenderingContext2D, options: ICameraOptions) {\n        if (\n            this.position.x < options.center.x - options.width / 2 ||\n            this.position.x > options.center.x + options.width / 2 ||\n\n            this.position.y < options.center.y - options.height / 2 ||\n            this.position.y > options.center.y + options.height / 2\n        ) {\n            this.handleHit();\n            return;\n        }\n\n        drawArc(ctx, this.position.x, this.position.y, this.radius, 'black');\n    }\n\n    public move() {\n        this.position.x += this.options.velocity.x;\n        this.position.y += this.options.velocity.y;\n    }\n\n    public handleHit() {\n        this.destroyEmitter.emit(this);\n    }\n}\n","import { Howl } from 'howler';\nimport ITankPlayer from '../players/ITankPlayer';\nimport ITankModel from '../tank-models/ITankModel';\nimport Emitter from '../utils/Emitter';\nimport TimeController from '../utils/TimeController';\nimport { drawImage, drawRect, loadImage, normalizeAngle } from '../utils/utils';\nimport Vector from '../utils/Vector';\nimport Bullet from './Bullet';\nimport IGameObject, { ICollidingGameObject } from './IGameObject';\n\nexport interface ITankOptions {\n    player: ITankPlayer;\n    position: Vector;\n    model: ITankModel;\n    type: 'tank';\n}\n\nexport default class Tank implements IGameObject, ICollidingGameObject {\n    public bulletEmitter = new Emitter<Bullet>();\n    public deathEmitter = new Emitter();\n\n    public model: ITankModel;\n    public position: Vector;\n    public type: 'tank' = 'tank';\n    public radius = 40;\n\n    private hp: number;\n    private gunAngle = Math.atan2(0, 0);\n    private tankAngle = Math.atan2(0, 0);\n    private image: HTMLImageElement;\n    private shotSound = new Howl({\n        src: '/audio/sounds/tank-shot.mp3',\n        preload: true,\n     });\n    private player: ITankPlayer;\n    private shotTimeController: TimeController;\n\n    constructor(options: ITankOptions) {\n        this.model = options.model;\n        this.hp = options.model.hp;\n\n        this.shotTimeController = new TimeController(1000);\n\n        this.player = options.player;\n\n        this.position = options.position;\n\n        loadImage(this.model.url)\n            .then(image => this.image = image);\n    }\n\n    public draw(ctx: CanvasRenderingContext2D) {\n        if (!this.image) {\n            return;\n        }\n\n        this.drawTank(ctx);\n        this.drawGun(ctx);\n    }\n\n    public handleHit(object: ICollidingGameObject) {\n        if (object.type !== 'bullet' || object.owner === this) {\n            return;\n        }\n\n        this.hp -= (object as any).damage;\n\n        if (this.hp <= 0) {\n            this.deathEmitter.emit({});\n        }\n    }\n\n    public move() {\n        let moveVector = this.player.getMoveVector();\n        let gunVector = this.player.getGunVector();\n\n        if (this.player.isSpeedButtonPressed()) {\n            moveVector = Vector.times(moveVector, 2);\n            gunVector = Vector.times(gunVector, 2);\n        }\n\n        const gunAngle = Vector.toAngle(gunVector);\n        const multiplier = Vector.getSize(gunVector);\n\n        this.moveTank(moveVector);\n        this.rotateGun(gunAngle, multiplier);\n\n        this.maybeShot();\n    }\n\n    private moveTank(moveVector: Vector) {\n        const moveAngle = Vector.toAngle(moveVector);\n        const absMoveForce = Math.abs(Math.cos(moveAngle - this.tankAngle) * this.model.tankSpeed);\n\n        const newMoveVector = Vector.times(moveVector, absMoveForce);\n\n        if (moveVector.x !== 0 || moveVector.y !== 0) {\n            this.rotateTank(moveAngle, Vector.getSize(moveVector));\n        }\n\n        this.position = Vector.add(this.position, newMoveVector);\n    }\n\n    private rotateTank(angle: number, multiplier: number) {\n        const angleDiff = Math.abs(this.tankAngle - angle);\n        const movement = Math.min(this.model.tankRotationSpeed * multiplier, angleDiff);\n\n        if ((this.tankAngle - angle > 0 && this.tankAngle - angle < Math.PI) ||\n            this.tankAngle - angle < -Math.PI) {\n            this.tankAngle -= movement;\n        } else {\n            this.tankAngle += movement;\n        }\n\n        this.tankAngle = normalizeAngle(this.tankAngle);\n    }\n\n    private rotateGun(gunAngle: number, multiplier: number) {\n        const movement = Math.min(this.model.gunRotationSpeed * multiplier, Math.abs(this.gunAngle - gunAngle));\n\n        if ((this.gunAngle - gunAngle > 0 && this.gunAngle - gunAngle < Math.PI) ||\n            this.gunAngle - gunAngle < -Math.PI) {\n            this.gunAngle -= movement;\n        } else {\n            this.gunAngle += movement;\n        }\n\n        this.gunAngle = normalizeAngle(this.gunAngle);\n    }\n\n    private getBulletSpeed() {\n        return this.model.bulletSpeed;\n    }\n\n    private getPosition() {\n        return this.position;\n    }\n\n    private getGunSize() {\n        return this.model.gunSize;\n    }\n\n    private getBulletDamage() {\n        return this.model.bulletDamage;\n    }\n\n    private getBulletRadius() {\n        return this.model.bulletRadius;\n    }\n\n    private maybeShot() {\n        if (!this.player.isShooting() || !this.shotTimeController.can()) {\n            return;\n        }\n\n        const gunVector = Vector.fromAngle(this.gunAngle, this.getBulletSpeed());\n        const startPosition = Vector.add(this.getPosition(), Vector.toSize(gunVector, this.getGunSize()));\n\n        const bullet = new Bullet({\n            position: startPosition,\n            velocity: gunVector,\n            owner: this,\n            damage: this.getBulletDamage(),\n            radius: this.getBulletRadius(),\n        });\n\n        this.bulletEmitter.emit(bullet);\n        this.shotSound.play();\n    }\n\n    private drawTank(ctx: CanvasRenderingContext2D) {\n        drawImage({\n            ctx,\n            image: this.image,\n            x: this.model.tank.x,\n            y: this.model.tank.y,\n            width: this.model.tank.width,\n            height: this.model.tank.height,\n            canvasOffsetX: this.position.x,\n            canvasOffsetY: this.position.y,\n            angle: this.tankAngle,\n            center: this.model.tankCenter,\n        });\n\n        if ((window as any).debugMode) {\n            drawRect({\n                ctx,\n                x: this.position.x,\n                y: this.position.y,\n                width: this.model.tank.width,\n                height: this.model.tank.height,\n                strokeStyle: 'red',\n                strokeWidth: 1,\n            });\n        }\n    }\n\n    private drawGun(ctx: CanvasRenderingContext2D) {\n        drawImage({\n            ctx,\n            image: this.image,\n            x: this.model.gun.x,\n            y: this.model.gun.y,\n            width: this.model.gun.width,\n            height: this.model.gun.height,\n            canvasOffsetX: this.position.x,\n            canvasOffsetY: this.position.y,\n            angle: this.gunAngle,\n            center: this.model.gunCenter,\n        });\n\n        if ((window as any).debugMode) {\n            drawRect({\n                ctx,\n                x: this.position.x,\n                y: this.position.y,\n                width: this.model.gun.width,\n                height: this.model.gun.height,\n                strokeStyle: 'blue',\n                strokeWidth: 1,\n            });\n        }\n    }\n}\n","import ICamera from './ICamera';\nimport Scene from './Scene';\n\ninterface IRendererOptions {\n    scene: Scene;\n    ctx: CanvasRenderingContext2D;\n    camera: ICamera;\n}\n\nexport default class Renderer {\n    private scene: Scene;\n    private ctx: CanvasRenderingContext2D;\n    private camera: ICamera;\n    private animatonId: number;\n\n    constructor({ scene, ctx, camera }: IRendererOptions) {\n        this.scene = scene;\n        this.ctx = ctx;\n        this.camera = camera;\n\n        this.updateScreen();\n        window.onresize = () => this.updateScreen();\n    }\n\n    public stop() {\n        window.cancelAnimationFrame(this.animatonId);\n    }\n\n    public render = () => {\n        this.ctx.clearRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height);\n\n        this.camera.updateBefore(this.ctx);\n\n        this.scene.update();\n        this.scene.render(this.ctx, this.camera.getOptions());\n\n        this.camera.updateAfter(this.ctx);\n\n        this.animatonId = window.requestAnimationFrame(this.render);\n    }\n\n    private updateScreen() {\n        this.ctx.canvas.width = window.innerWidth;\n        this.ctx.canvas.height = window.innerHeight;\n    }\n}\n","import IGameObjectIterable, { ICollidingGameObjectCollection } from '../collections/IGameObjectCollection';\nimport CollisionManager from './CollisionManager';\nimport { ICameraOptions } from './ICamera';\n\nexport default class Scene {\n    private collisionManager = new CollisionManager();\n    private iterables: IGameObjectIterable[] = [];\n\n    constructor(...iterables: IGameObjectIterable[]) {\n        this.add(...iterables);\n    }\n\n    public add(...iterables: IGameObjectIterable[]) {\n        for (const iterable of iterables) {\n            this.iterables.push(iterable);\n\n            if (iterable.objectsCollide) {\n                this.collisionManager.add(iterable as ICollidingGameObjectCollection);\n            }\n        }\n    }\n\n    public render(ctx: CanvasRenderingContext2D, cameraOptions: ICameraOptions) {\n        for (const iterable of this.iterables) {\n            for (const element of iterable) {\n                element.move();\n                element.draw(ctx, cameraOptions);\n            }\n        }\n\n        ctx.restore();\n    }\n\n    public update() {\n        for (const iterable of this.iterables) {\n            for (const element of iterable) {\n                element.move();\n            }\n        }\n\n        this.collisionManager.checkCollisions();\n    }\n}\n","import { ICollidingGameObjectCollection } from '../collections/IGameObjectCollection';\nimport { ICollidingGameObject } from '../models/IGameObject';\nimport Vector from '../utils/Vector';\n\nexport default class CollisionManager {\n    private objectIterators: ICollidingGameObjectCollection[] = [];\n\n    public add(...objects: ICollidingGameObjectCollection[]) {\n        this.objectIterators.push(...objects);\n    }\n\n    public checkCollisions() {\n        for (let i = 0; i < this.objectIterators.length; i++) {\n            for (let j = 0; j < i; j++) {\n                for (const o1 of this.objectIterators[i]) {\n                    for (const o2 of this.objectIterators[j]) {\n                        const collision = this.checkCollision(o1, o2);\n\n                        if (collision) {\n                            o1.handleHit(o2);\n                            o2.handleHit(o1);\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    private checkCollision(o1: ICollidingGameObject, o2: ICollidingGameObject) {\n        return (o1.radius + o2.radius) ** 2 > Vector.squaredDistance(o1.position, o2.position);\n    }\n}\n","import IGameObjectCollection from '../collections/IGameObjectCollection';\nimport ICamera from './ICamera';\n\nexport default class WholeViewCamera implements ICamera {\n    private collection: IGameObjectCollection;\n\n    public updateBefore(ctx: CanvasRenderingContext2D) {\n        const options = this.getOptions();\n\n        const ratio = options.ratio;\n\n        ctx.save();\n\n        ctx.scale(ratio, ratio);\n\n        ctx.translate(\n            ctx.canvas.width / 2 / ratio - options.center.x,\n            ctx.canvas.height / 2 / ratio - options.center.y,\n        );\n    }\n\n    public updateAfter(ctx: CanvasRenderingContext2D) {\n        ctx.restore();\n    }\n\n    public track(collection: IGameObjectCollection) {\n        this.collection = collection;\n    }\n\n    public getOptions() {\n        let maxLeft = Infinity;\n        let maxRight = -Infinity;\n        let maxTop = Infinity;\n        let maxBottom = -Infinity;\n\n        for (const { position } of this.collection) {\n            maxLeft = Math.min(position.x, maxLeft);\n            maxRight = Math.max(position.x, maxRight);\n            maxTop = Math.min(position.y, maxTop);\n            maxBottom = Math.max(position.y, maxBottom);\n        }\n\n        const ratio = Math.min(\n            window.innerWidth / (maxRight - maxLeft + window.innerWidth),\n            window.innerHeight / (maxBottom - maxTop + window.innerHeight),\n        );\n\n        return {\n            center: {\n                x: (maxLeft + maxRight) / 2,\n                y: (maxTop + maxBottom) / 2,\n            },\n            width: window.innerWidth / ratio,\n            height: window.innerHeight / ratio,\n            ratio,\n        };\n    }\n}\n","import IController from '../controllers/IController';\nimport ITankPlayer from './ITankPlayer';\n\nexport default class HumanTankPlayer implements ITankPlayer {\n    private controller: IController;\n\n    constructor(controller: IController) {\n        this.controller = controller;\n    }\n\n    public isShooting() {\n        return this.controller.isPressed(this.controller.key.SHOT_KEY);\n    }\n\n    public isSpeedButtonPressed() {\n        return this.controller.isPressed(this.controller.key.SPEED_UP);\n    }\n\n    public getMoveVector() {\n        return this.controller.getLeftAxis();\n    }\n\n    public getGunVector() {\n        return this.controller.getRightAxis();\n    }\n}\n","import ITankModel from './ITankModel';\n\nconst E100: ITankModel = {\n    url: '../images/tanks/E-100_strip2.png',\n    tank: { x: 0, y: 0, width: 100, height: 170 },\n    gun: { x: 95, y: 10, width: 100, height: 200 },\n    tankCenter: { x: 50, y: 85 },\n    gunCenter: { x: 145, y: 115 },\n    gunSize: 70,\n    tankSpeed: 3,\n    tankRotationSpeed: Math.PI / 25,\n    gunRotationSpeed: Math.PI / 30,\n    bulletSpeed: 20,\n    shotDuration: 500,\n    bulletDamage: 40,\n    bulletRadius: 5,\n    hp: 100,\n};\n\nexport default E100;\n"]}